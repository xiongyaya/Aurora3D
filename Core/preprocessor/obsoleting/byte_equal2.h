#pragma once

#include"bool_delay_invoke_if.h"
#include"bit4x4_equal.h"

#define A3D_PP_BYTE_EQUAL(byte1, byte2) \
			A3D_PP_BYTE_EQUAL_REPARSE1(  A3D_PP_CONNECT( A3D_PP_BYTE_EQUAL_EXPLICIT, \
				(A3D_PP_BYTE_EQUAL_UNPACK(byte1),A3D_PP_BYTE_EQUAL_UNPACK(byte2)) ))

#define A3D_PP_BYTE_EQUAL_EXPLICIT(x7,x6,x5,x4,x3,x2,x1,x0,y7,y6,y5,y4,y3,y2,y1,y0) \
			 A3D_PP_BYTE_EQUAL_REPARSE2( A3D_PP_DELAY_INVOKE_IF( \
				A3D_PP_BIT4x4_EQUAL(x7,x6,x5,x4,y7,y6,y5,y4), \
				A3D_PP_BIT4x4_EQUAL, \
                A3D_PP_BIT4x4_EQUAL_FALSE, \
			    (x3,x2,x1,x0,y3,y2,y1,y0)) )

#define A3D_PP_BYTE_EQUAL_UNPACK(byte) A3D_PP_BYTE_EQUAL_REPARSE1(A3D_PP_CONNECT( A3D_PP_BYTE_EQUAL_UNPACK_HELPER,byte))
#define A3D_PP_BYTE_EQUAL_UNPACK_HELPER(...) __VA_ARGS__

#define A3D_PP_BYTE_EQUAL_REPARSE1(...)      A3D_PP_BYTE_EQUAL_REPARSE1_HELPER(__VA_ARGS__)
#define A3D_PP_BYTE_EQUAL_REPARSE1_HELPER(...)  __VA_ARGS__
#define A3D_PP_BYTE_EQUAL_REPARSE2(...)      A3D_PP_BYTE_EQUAL_REPARSE2_HELPER(__VA_ARGS__)
#define A3D_PP_BYTE_EQUAL_REPARSE2_HELPER(...) __VA_ARGS__

